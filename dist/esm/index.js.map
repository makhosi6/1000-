{"version":3,"file":"index.js","sources":["../../src/job/csv.ts","../../src/index.ts"],"sourcesContent":["const createObjectCsvWriter = require('csv-writer').createObjectCsvWriter;\r\nconst nodeBase64 = require('nodejs-base64-converter');\r\n// const fs = require(\"fs\");\r\n\r\n// console.log(nodeBase64.encode(\"test text\")); //dGVzdCB0ZXh0\r\n// console.log(nodeBase64.decode(\"dGVzdCB0ZXh0\"));\r\n\r\n\r\nconst csvWriter = (filename: string) => createObjectCsvWriter({\r\n    append : true,\r\n    path: `../data/csv/${filename}.csv`,\r\n    header: [\r\n        {id: '_key', title: 'key',  },\r\n        {id: '_title', title: 'title'},\r\n        {id:\"_category\",  title: 'category'}\r\n    ]\r\n});\r\n \r\n\r\n\r\n//  [\r\n//     \"0\",\r\n//     \"a\",\r\n//     \"b\",\r\n//     \"c\",\r\n//     \"d\",\r\n//     \"e\",\r\n//     \"f\",\r\n//     \"g\",\r\n//     \"h\",\r\n//     \"i\",\r\n//     \"j\",\r\n//     \"k\",\r\n//     \"l\",\r\n//     \"m\",\r\n//     \"n\",\r\n//     \"o\",\r\n//     \"p\",\r\n//     \"q\",\r\n//     \"r\",\r\n//     \"s\",\r\n//     \"t\",\r\n//     \"u\",\r\n//     \"v\",\r\n//     \"w\",\r\n//     \"x\",\r\n//     \"y\",\r\n//     \"z\",\r\n// ]\r\nexport const prepareCSV =  () => {\r\n\r\n    ['z'].map((alpha:string) => {\r\n        \r\n        console.log(__dirname)\r\n        console.log(__filename)\r\n        const allFileContents = require(\"fs\").readFileSync(`E:/F drive/projects/1000-/src/data/${alpha}.txt`, \"utf-8\");\r\n        \r\n        const records : Array<object> = (allFileContents.split(/\\r?\\n/)).map((item: string): object => {\r\n            \r\n            return {_key: nodeBase64.encode(item),  _title: item, _category: alpha }\r\n            \r\n        })\r\n        \r\n\r\n        console.log({records})\r\n      \r\n            csvWriter(alpha).writeRecords(records)      \r\n            .then(() => {\r\n                console.log('...Done ', alpha);\r\n            });\r\n        })\r\n    }","import { readCSV } from './helpers';\r\nimport { prepareCSV } from './job/csv';\r\nimport { Browser } from \"../node_modules/puppeteer/lib/types\";\r\nconst puppeteer = require(\"puppeteer\");\r\n\r\nimport { task } from \"./job/words\";\r\n\r\nconst launch = async (): Promise<Browser> =>\r\n  await puppeteer.launch({\r\n    headless: false,\r\n    userDataDir: \"./cache/user_dir\",\r\n    executablePath: \"C:/Program Files/Google/Chrome/Application/chrome.exe\",\r\n  });\r\n\r\nlet alphaArr = ['0','a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']\r\n// alphaArr.map(alpha => launch().then((browser) => task(browser, alpha, '1')));\r\n\r\n// launch().then((br) => {\r\n//   try {\r\n//     task(br, \"0\", \"1\");\r\n//   } catch (error) {\r\n//     console.log(\"++++++\");\r\n//   }\r\n// });\r\n\r\n// alphaArr.map(a => readCSV(a))\r\nprepareCSV()"],"names":[],"mappings":"AAAA,MAAM,qBAAqB,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,qBAAqB,CAAC;AAC1E,MAAM,UAAU,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;AACtD;AAEA;AACA;AAGA,MAAM,SAAS,GAAG,CAAC,QAAgB,KAAK,qBAAqB,CAAC;AAC1D,IAAA,MAAM,EAAG,IAAI;IACb,IAAI,EAAE,CAAe,YAAA,EAAA,QAAQ,CAAM,IAAA,CAAA;AACnC,IAAA,MAAM,EAAE;AACJ,QAAA,EAAC,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,GAAI;AAC7B,QAAA,EAAC,EAAE,EAAE,QAAQ,EAAE,KAAK,EAAE,OAAO,EAAC;AAC9B,QAAA,EAAC,EAAE,EAAC,WAAW,EAAG,KAAK,EAAE,UAAU,EAAC;AACvC,KAAA;AACJ,CAAA,CAAC,CAAC;AAIH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAM,UAAU,GAAI,MAAK;IAE5B,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,KAAY,KAAI;AAEvB,QAAA,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAA;AACtB,QAAA,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAA;AACvB,QAAA,MAAM,eAAe,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC,YAAY,CAAC,sCAAsC,KAAK,CAAA,IAAA,CAAM,EAAE,OAAO,CAAC,CAAC;AAE/G,QAAA,MAAM,OAAO,GAAmB,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,EAAE,GAAG,CAAC,CAAC,IAAY,KAAY;AAE1F,YAAA,OAAO,EAAC,IAAI,EAAE,UAAU,CAAC,MAAM,CAAC,IAAI,CAAC,EAAG,MAAM,EAAE,IAAI,EAAE,SAAS,EAAE,KAAK,EAAE,CAAA;AAE5E,SAAC,CAAC,CAAA;AAGF,QAAA,OAAO,CAAC,GAAG,CAAC,EAAC,OAAO,EAAC,CAAC,CAAA;AAElB,QAAA,SAAS,CAAC,KAAK,CAAC,CAAC,YAAY,CAAC,OAAO,CAAC;aACrC,IAAI,CAAC,MAAK;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;AACnC,SAAC,CAAC,CAAC;AACP,KAAC,CAAC,CAAA;AACN,CAAC;;ACpEa,OAAO,CAAC,WAAW,EAAE;AAYvC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,UAAU,EAAE"}